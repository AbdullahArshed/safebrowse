# Generated by Django 4.2.23 on 2025-08-05 10:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='URLSafetyReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=2048)),
                ('safety_level', models.CharField(choices=[('safe', 'Safe'), ('warning', 'Warning'), ('dangerous', 'Dangerous'), ('unknown', 'Unknown')], default='unknown', max_length=10)),
                ('safety_score', models.FloatField(default=0.0)),
                ('summary', models.TextField(blank=True)),
                ('analyzed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('analysis_duration', models.FloatField(default=0.0)),
                ('checks_completed', models.PositiveIntegerField(default=0)),
                ('checks_failed', models.PositiveIntegerField(default=0)),
                ('has_ssl_issues', models.BooleanField(default=False)),
                ('has_malware', models.BooleanField(default=False)),
                ('has_phishing', models.BooleanField(default=False)),
                ('has_suspicious_domain', models.BooleanField(default=False)),
                ('has_open_ports', models.BooleanField(default=False)),
                ('has_dns_issues', models.BooleanField(default=False)),
                ('is_blacklisted', models.BooleanField(default=False)),
                ('has_mixed_content', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safety_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'URL Safety Report',
                'verbose_name_plural': 'URL Safety Reports',
                'ordering': ['-analyzed_at'],
            },
        ),
        migrations.CreateModel(
            name='SSLCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=253)),
                ('issuer', models.CharField(max_length=500)),
                ('subject', models.CharField(max_length=500)),
                ('serial_number', models.CharField(max_length=100)),
                ('signature_algorithm', models.CharField(max_length=100)),
                ('not_before', models.DateTimeField()),
                ('not_after', models.DateTimeField()),
                ('is_valid', models.BooleanField(default=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('is_self_signed', models.BooleanField(default=False)),
                ('key_size', models.IntegerField(default=0)),
                ('is_weak_key', models.BooleanField(default=False)),
                ('has_san', models.BooleanField(default=False)),
                ('san_domains', models.JSONField(default=list)),
                ('chain_length', models.IntegerField(default=0)),
                ('is_chain_valid', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'SSL Certificate',
                'verbose_name_plural': 'SSL Certificates',
                'unique_together': {('domain', 'serial_number')},
            },
        ),
        migrations.CreateModel(
            name='SecurityCheckResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('check_type', models.CharField(choices=[('ssl_check', 'SSL/TLS Check'), ('safe_browsing', 'Google Safe Browsing'), ('certificate_check', 'Certificate Validation'), ('whois_check', 'WHOIS Lookup'), ('port_scan', 'Port Scanning'), ('dns_check', 'DNS Validation'), ('blacklist_check', 'Blacklist Check'), ('mixed_content', 'Mixed Content Detection'), ('vulnerability_scan', 'Vulnerability Scan')], max_length=20)),
                ('status', models.CharField(choices=[('passed', 'Passed'), ('failed', 'Failed'), ('warning', 'Warning'), ('error', 'Error'), ('skipped', 'Skipped')], max_length=10)),
                ('details', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('execution_time', models.FloatField(default=0.0)),
                ('risk_score', models.FloatField(default=0.0)),
                ('weight', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='check_results', to='safety_checker.urlsafetyreport')),
            ],
            options={
                'verbose_name': 'Security Check Result',
                'verbose_name_plural': 'Security Check Results',
                'ordering': ['check_type'],
            },
        ),
        migrations.CreateModel(
            name='PortScanResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.GenericIPAddressField()),
                ('port', models.PositiveIntegerField()),
                ('is_open', models.BooleanField(default=False)),
                ('service', models.CharField(blank=True, max_length=100)),
                ('version', models.CharField(blank=True, max_length=200)),
                ('banner', models.TextField(blank=True)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='low', max_length=10)),
                ('scanned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='port_scans', to='safety_checker.urlsafetyreport')),
            ],
            options={
                'verbose_name': 'Port Scan Result',
                'verbose_name_plural': 'Port Scan Results',
            },
        ),
        migrations.CreateModel(
            name='DomainInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=253, unique=True)),
                ('registrar', models.CharField(blank=True, max_length=200)),
                ('creation_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('name_servers', models.JSONField(default=list)),
                ('a_records', models.JSONField(default=list)),
                ('mx_records', models.JSONField(default=list)),
                ('txt_records', models.JSONField(default=list)),
                ('spf_record', models.TextField(blank=True)),
                ('dmarc_record', models.TextField(blank=True)),
                ('dkim_records', models.JSONField(default=list)),
                ('reputation_score', models.FloatField(default=0.0)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('blacklist_status', models.JSONField(default=dict)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cache_expires', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Domain Information',
                'verbose_name_plural': 'Domain Information',
                'indexes': [models.Index(fields=['domain'], name='safety_chec_domain_d546d9_idx'), models.Index(fields=['last_updated'], name='safety_chec_last_up_ba0429_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='urlsafetyreport',
            index=models.Index(fields=['url'], name='safety_chec_url_557ff4_idx'),
        ),
        migrations.AddIndex(
            model_name='urlsafetyreport',
            index=models.Index(fields=['user', '-analyzed_at'], name='safety_chec_user_id_83f8e3_idx'),
        ),
        migrations.AddIndex(
            model_name='urlsafetyreport',
            index=models.Index(fields=['safety_level'], name='safety_chec_safety__4e0b33_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='securitycheckresult',
            unique_together={('report', 'check_type')},
        ),
        migrations.AlterUniqueTogether(
            name='portscanresult',
            unique_together={('report', 'host', 'port')},
        ),
    ]
